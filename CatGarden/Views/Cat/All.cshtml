@model CatGarden.Web.ViewModels.Cat.AllCatsQueryModel
@using CatGarden.Services.Data.Interfaces
@using CatGarden.Web.Infrastructure.Extensions
@using static CatGarden.Common.Enums
@inject ICatteryOwnerService CatteryOwnerService
@inject ICatService CatService
@{
    bool isCatteryOwner = await CatteryOwnerService.CatteryOwnerExistsByUserIdAsync(User.GetId()!);
}

@{
    ViewBag.Title = "All Cats";
}

<h2 class="text-center">@ViewBag.Title</h2>
<hr />

<form method="get">
    <div class="row">

        <div class="form-group col-md-3">
            <label asp-for="Breed"></label>
            <select asp-for="Breed" class="form-control">
                <option value="">All</option>
                @foreach (Breed breed in Enum.GetValues(typeof(Breed)))
                {
                    <option value="@breed.ToString()">@EnumExtensions.GetDisplayName(breed)</option>
                }
            </select>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="Gender"></label>
            <select asp-for="Gender" class="form-control">
                <option value="">All</option>
                @foreach (var gender in Enum.GetValues(typeof(Gender)))
                {
                    <option value="@gender">@gender</option>
                }
            </select>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="Color"></label>
            <select asp-for="Color" class="form-control">
                <option value="">All</option>
                @foreach (var color in Enum.GetValues(typeof(Color)))
                {
                    <option value="@color">@color</option>
                }
            </select>
        </div>


        <div class="form-group col-md-3">
            <label asp-for="CoatLength"></label>
            <select asp-for="CoatLength" class="form-control">
                <option value="">All</option>
                @foreach (var coatLength in Enum.GetValues(typeof(CoatLength)))
                {
                    <option value="@coatLength">@coatLength</option>
                }
            </select>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="City"></label>
            <select asp-for="City" class="form-control">
                <option value="">All</option>
                @foreach (City city in Enum.GetValues(typeof(City)))
                {
                    <option value="@city.ToString()">@EnumExtensions.GetDisplayName(city)</option>
                }
            </select>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="CatSorting"></label>
            <select asp-for="CatSorting" class="form-control">
                <option value="Newest">Newest</option>
                <option value="Oldest">Oldest</option>
                <option value="AgeAscending">Age (Ascending)</option>
                <option value="AgeDescending">Age (Descending)</option>
                <option value="LikesAscending">Likes (Ascending)</option>
                <option value="LikesDescending">Likes (Descending)</option>
            </select>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="SearchString"></label>
            <input asp-for="SearchString" class="form-control" placeholder="...">
        </div>

        <div class="form-group col-md-3">
            <label asp-for="Cattery"></label>
            <select asp-for="Cattery" class="form-control">
                <option value="">All</option>
                @foreach (var cattery in Model.Catteries)
                {
                    <option value="@cattery">@cattery</option>
                }
            </select>
        </div>

        <div class="form-group">

            <label asp-for="CatsPerPage"></label>

            <select asp-for="CatsPerPage" class="form-control">

                <option value="4">4</option>

                <option value="8">8</option>

                <option value="12">12</option>

            </select>

        </div>

        <div class="col-md-3">
            <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-primary" />
            </div>
        </div>
    </div>
</form>

@{
    int previousPage = Model.CurrentPage - 1;
    if (previousPage < 1)
    {
        previousPage = 1;
    }

    int maxPage = (int)Math.Ceiling((double)Model.TotalCats /
        Model.CatsPerPage);
}

<div class="row mb-5">
    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-primary @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
           asp-area=""
           asp-controller="Cat"
           asp-action="All"
           asp-route-currentPage="@previousPage"
           asp-route-category="@Model.Cattery"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.CatSorting)"><<</a>
    </div>

    @{
        bool shouldNextPageBeDisabled = Model.CurrentPage == maxPage ||
        !Model.Cats.Any();
    }

    <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-primary
           @(shouldNextPageBeDisabled ? "disabled" : string.Empty)"
           asp-area=""
           asp-controller="Cat"
           asp-action="All"
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-category="@Model.Cattery"
           asp-route-searchTerm="@Model.SearchString"
           asp-route-sorting="@((int)Model.CatSorting)">>></a>
    </div>
</div>

@if (!Model.Cats.Any())
{
    <h2 class="text-center">No cats found by the given criteria!</h2>
}

<div class="row">
    @foreach (var cat in Model.Cats)
    {
        <partial name="_CatPartial" model="@cat" />
    }
</div>


@section Scripts {
    <partial name="_ValidationScriptsPartial" />
    <script>
        $(document).on('click', '.deleteButton', function () {
            var catId = $(this).data('cat-id');
            $('#deleteConfirmationModal').modal('show');

            // Set the delete action URL with the catId
            var deleteUrl = '@Url.Action("Delete", "Cat")' + '/' + catId;
            $('#deleteForm').attr('action', deleteUrl);
        });

    </script>
    <script>
        $(document).on('submit', '.favorite-form', function (event) {
            event.preventDefault(); // Prevent the form from submitting normally

            var form = $(this);
            var catId = form.find('.cat-id').val();
            var catName = form.data('cat-name');
            var isFavorite = form.hasClass('favorite');
            var actionUrl = isFavorite ? '@Url.Action("RemoveFavorite", "Cat")' : '@Url.Action("AddFavorite", "Cat")';

            $.ajax({
                type: 'POST',
                url: actionUrl,
                data: { catId: catId },
                success: function (response) {
                    // Toggle the 'favorite' class on the form to indicate whether the cat is now a favorite
                    form.toggleClass('favorite');

                    // Toggle the heart icon based on whether the cat is now a favorite
                    var heartIcon = form.find('.heart-icon');
                    heartIcon.toggleClass('far fa-heart fas fa-heart');

                    // Update the likes count displayed next to the heart icon
                    var likesCount = form.closest('.card').find('.likes-count');
                    likesCount.text(catName + ' has been favorited ' + response.likesCount + ' times!');
                },
                error: function (xhr, status, error) {
                    console.error(xhr.responseText);
                    // Handle error appropriately
                }
            });
        });

    </script>
}


